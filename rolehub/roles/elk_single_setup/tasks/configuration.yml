# - name: Check if ILM policy exists
#   uri:
#     url: "https://{{ SUBDOMAIN_ELASTIC }}.{{ DOMAIN }}:443/_ilm/policy/{{ ILM.POLICY_NAME}}"
#     user: "{{ ELASTIC_USERNAME_MASKED }}"
#     password: "{{ ELASTIC_PASSWORD_MASKED }}"
#     method: GET
#     headers:
#       Content-Type: "application/json"
#     validate_certs: false
#   delegate_to: localhost
#   register: ilm_check
#   failed_when: false
#   retries: 5
#   delay: 20
#   tags:
#   - ilm_check
#   - ilm_create
#     # - name: Print ILM check result
#     #   debug:
#     #     var: ilm_check
#     #   tags:
#     #   - ilm_check

# - name: Create ILM policy only if not exists
#   uri:
#     url: "https://{{ SUBDOMAIN_ELASTIC }}.{{ DOMAIN }}:443/_ilm/policy/{{ ILM.POLICY_NAME}}"
#     user: "{{ ELASTIC_USERNAME_MASKED }}"
#     password: "{{ ELASTIC_PASSWORD_MASKED }}"
#     method: PUT
#     headers:
#       Content-Type: "application/json"
#     validate_certs: false
#     body_format: json
#     body:
#       policy:
#         phases:
#           hot:
#             min_age: "0d"
#             actions:
#               rollover:
#                 max_size: "{{ ILM.MAX_SIZE_HOT }}"
#                 max_age: "{{ ILM.MAX_AGE_HOT}}"
#               set_priority:
#                 priority: 100
#           warm:
#             min_age: "{{ ILM.MAX_AGE_HOT}}"
#             actions:
#               set_priority:
#                 priority: 50
#               shrink:
#                 number_of_shards: 1
#               forcemerge:
#                 max_num_segments: 1
#           cold:
#             min_age: "30d"
#             actions:
#               set_priority:
#                 priority: 0
#               freeze: {}
#           delete:
#             min_age: "90d"
#             actions:
#               delete: {}
#   delegate_to: localhost
#   when: ilm_check.status == 404
#   register: ilm_create_response
#   tags:
#   - ilm_create
#   # - name: Print ILM create result
#   #   debug:
#   #     var: ilm_create_response
#   # when: ilm_check.status == 404

# - name: Check if ILM policy Created
#   uri:
#     url: "https://{{ SUBDOMAIN_ELASTIC }}.{{ DOMAIN }}:443/_ilm/policy/{{ ILM.POLICY_NAME}}"
#     user: "{{ ELASTIC_USERNAME_MASKED }}"
#     password: "{{ ELASTIC_PASSWORD_MASKED }}"
#     method: GET
#     headers:
#       Content-Type: "application/json"
#     validate_certs: false
#   delegate_to: localhost
#   register: ilm_check
#   failed_when: false
#   until: ilm_check.status == 200
#   tags:
#   - ilm_check
#   - ilm_create
#   - ilm_create_check

# # - name: Debug creation
# #   debug:
# #     var: ilm_check
# #   tags: ilm_create_check

# - name: Create initial index with alias for ILM rollover
#   uri:
#     url: "https://{{ SUBDOMAIN_ELASTIC }}.{{ DOMAIN }}:443/_ilm/policy/{{ alias.alias_name}}"
#     user: "{{ ELASTIC_USERNAME_MASKED }}"
#     password: "{{ ELASTIC_PASSWORD_MASKED }}"
#     method: PUT
#     headers:
#       Content-Type: "application/json"
#     validate_certs: false
#     body_format: json
#     body:
#       aliases:
#         "{{  }}":
#           is_write_index: true
#   delegate_to: localhost
#   register: create_initial_index
#   retries: 5
#   delay: 15
#   until: create_initial_index.status == 200
#   tags:
#   - index-sample-create

# - name: Create index template with ILM and alias
#   uri:
#     url: "https://{{ SUBDOMAIN_ELASTIC }}.{{ DOMAIN }}:443/_ilm/policy/{{ ILM.POLICY_NAME}}"
#     user: "{{ ELASTIC_USERNAME_MASKED }}"
#     password: "{{ ELASTIC_PASSWORD_MASKED }}"
#     method: PUT
#     headers:
#       Content-Type: "application/json"
#     validate_certs: false
#     body_format: json
#     body:
#       index_patterns: [ "filebeat-*" ]
#       template:
#         settings:
#           index:
#             number_of_shards: 1
#             number_of_replicas: 1
#             lifecycle:
#               name: "log-3hot-14warm-30cold-90delete"
#               rollover_alias: "filebeat-current"
#         mappings:
#           dynamic: true
#           _source:
#             enabled: true
#           properties:
#             "@timestamp":
#               type: date
#             message:
#               type: text
#       data_stream: {}
#       priority: 100
#   delegate_to: localhost
#   register: template_create_response
#   retries: 5
#   delay: 15
#   # until: template_create_response.status == 200
#   tags:
#   - template_index
# - name: debug
#   debug:
#     var: template_create_response
#   tags:
#   - template_index

# - name: Create index template with ILM and alias
#   uri:
#     url: "https://{{ SUBDOMAIN_ELASTIC }}.{{ DOMAIN }}:443/_ilm/policy/{{ ILM.POLICY_NAME}}"
#     user: "{{ ELASTIC_USERNAME_MASKED }}"
#     password: "{{ ELASTIC_PASSWORD_MASKED }}"
#     method: PUT
#     headers:
#       Content-Type: "application/json"
#     validate_certs: false
#     body_format: json
#     body:
#       index_patterns: [ "filebeat-*" ]
#       template:
#         settings:
#           index:
#             number_of_shards: 1
#             number_of_replicas: 1
#             lifecycle:
#               name: "log-3hot-14warm-30cold-90delete"
#               rollover_alias: "filebeat-sample"
#         mappings:
#           dynamic: true
#           properties:
#             "@timestamp":
#               type: date
#             message:
#               type: text
#       priority: 100
#   delegate_to: localhost
#   register: template_create_response
#   retries: 5
#   delay: 15
#   until: template_create_response.status == 200
#   tags:
#   - template_create

- name: Check if ILM policy for auth exists
  uri:
    url: "https://{{ SUBDOMAIN_ELASTIC }}.{{ DOMAIN }}:443/_ilm/policy/{{ ILM.POLICY_NAME}}"
    user: "{{ ELASTIC_USERNAME_MASKED }}"
    password: "{{ ELASTIC_PASSWORD_MASKED }}"
    method: GET
    headers:
      Content-Type: "application/json"
    validate_certs: false
  delegate_to: localhost
  register: ilm_auth_check
  failed_when: false
  tags:
  - auth_ilm_check
  - auth_ilm

- name: Create ILM policy for auth if not exists
  uri:
    url: "https://{{ SUBDOMAIN_ELASTIC }}.{{ DOMAIN }}:443/_ilm/policy/{{ ILM.POLICY_NAME}}"
    user: "{{ ELASTIC_USERNAME_MASKED }}"
    password: "{{ ELASTIC_PASSWORD_MASKED }}"
    method: PUT
    headers:
      Content-Type: "application/json"
    validate_certs: false
    body_format: json
    body:
      policy:
        phases:
          hot:
            min_age: "0d"
            actions:
              rollover:
                max_size: "{{ ILM.MAX_SIZE_HOT }}"
                max_age: "{{ ILM.MAX_AGE_HOT }}"
              set_priority:
                priority: 100
          warm:
            min_age: "{{ ILM.MAX_AGE_HOT }}"
            actions:
              set_priority:
                priority: 50
              shrink:
                number_of_shards: 1
              forcemerge:
                max_num_segments: 1
          cold:
            min_age: "{{ ILM.MIN_AGE_COLD}}"
            actions:
              set_priority:
                priority: 0
              freeze: {}
          delete:
            min_age: "{{ ILM.MIN_AGE_DELETE }}"
            actions:
              delete: {}
  when: ilm_auth_check.status == 404
  register: ilm_auth_create_response
  retries: 5
  delay: 15
  until: ilm_auth_create_response.status == 200
  delegate_to: localhost
  tags:
  - auth_ilm_create
  - auth_ilm

- name: Verify if Everything ok
  debug:
    msg: OK!
  when: ilm_auth_check.status == 200 or ilm_auth_create_response.status == 200
  tags:
  - auth_ilm

- name: Create initial index with alias for ILM rollover
  uri:
    url: "https://{{ SUBDOMAIN_ELASTIC }}.{{ DOMAIN }}:443/_ilm/policy/{{ alias.alias_name}}"
    user: "{{ ELASTIC_USERNAME_MASKED }}"
    password: "{{ ELASTIC_PASSWORD_MASKED }}"
    method: PUT
    headers:
      Content-Type: "application/json"
    validate_certs: false
    body_format: json
    body:
      aliases:
        logs-auth:
          is_write_index: true
  delegate_to: localhost
  register: create_initial_index
  retries: 5
  delay: 15
  until: create_initial_index.status == 200
  tags:
  - index-sample-create

- name: Create index template for auth logs
  uri:
    url: "https://{{ SUBDOMAIN_ELASTIC }}.{{ DOMAIN }}:443/_index_template/logs-auth-template"
    user: "{{ ELASTIC_USERNAME_MASKED }}"
    password: "{{ ELASTIC_PASSWORD_MASKED }}"
    method: PUT
    headers:
      Content-Type: "application/json"
    validate_certs: false
    body_format: json
    body:
      index_patterns: [ "logs-auth-*" ]
      template:
        settings:
          index:
            number_of_shards: 1
            number_of_replicas: 1
            lifecycle:
              name: "ilm-auth-hot7d-warm30d-cold90d-del180d"
              rollover_alias: "logs-auth"
        mappings:
          dynamic: true
          properties:
            "@timestamp":
              type: date
            message:
              type: text
      priority: 100
  delegate_to: localhost
  register: logs_auth_template_create
  # retries: 5
  # delay: 10
  until: logs_auth_template_create.status == 200
  tags:
  - auth-log-template-create

- name: Create index template for logs-auth
  uri:
    url: "https://{{ SUBDOMAIN_ELASTIC }}.{{ DOMAIN }}/_index_template/logs-auth-template"
    user: "{{ ELASTIC_USERNAME_MASKED }}"
    password: "{{ ELASTIC_PASSWORD_MASKED }}"
    method: PUT
    headers:
      Content-Type: "application/json"
    validate_certs: false
    body_format: json
    body:
      index_patterns:
      - "logs-auth-*"
      template:
        settings:
          index:
            number_of_shards: 1
            number_of_replicas: 1
            lifecycle:
              name: "ilm-auth-hot7d-warm30d-cold90d-del180d"
              rollover_alias: "logs-auth"
        mappings:
          dynamic: true
          properties:
            "@timestamp":
              type: date
            message:
              type: text
      priority: 200
  delegate_to: localhost
  register: logs_auth_template_create
  retries: 5
  delay: 15
  until: logs_auth_template_create.status == 200
  tags:
  - template
