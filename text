CREATE USER 'replication'@'%' IDENTIFIED BY 'arvan-replica';

ALTER USER 'replication'@'%' IDENTIFIED BY 'arvan-replica';





GRANT REPLICATION SLAVE ON *.* TO 'replication'@'%';



CHANGE MASTER TO
  MASTER_HOST='mysql-master-svc',
  MASTER_USER='replication',
  MASTER_PASSWORD='arvan-replica',
  MASTER_AUTO_POSITION = 1;


  CREATE TABLE Persons (
    PersonID int,
    LastName varchar(255),
    FirstName varchar(255),
    Address varchar(255),
    City varchar(255)
);

CREATE TABLE authors (id INT, name VARCHAR(20), email VARCHAR(20));
INSERT INTO authors (id,name,email) VALUES(1,"Vivek","xuz@abc.com");





DROP USER IF EXISTS 'mysqld_exporter'@'127.0.0.1';
DROP USER IF EXISTS 'mysqld_exporter'@'::1';
DROP USER IF EXISTS 'mysqld_exporter'@'localhost';
CREATE USER 'mysqld_exporter'@'127.0.0.1' IDENTIFIED BY 'exporter';
CREATE USER 'mysqld_exporter'@'::1'       IDENTIFIED BY 'exporter';
CREATE USER 'mysqld_exporter'@'localhost' IDENTIFIED BY 'exporter';
GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO 'mysqld_exporter'@'127.0.0.1';
GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO 'mysqld_exporter'@'::1';
GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO 'mysqld_exporter'@'localhost';
FLUSH PRIVILEGES;






  filebeat setup --index-management --pipelines --dashboards -e \
  -E output.elasticsearch.hosts=["http://elasticsearch:9200"] \
  -E output.elasticsearch.username=elastic \
  -E output.elasticsearch.password='lh7e3n3GJ2TVso3WWlXc0IOSZOJ39HlWwCu4gYK8LwYd3emUZE' \
  -E setup.kibana.host=http://kibana:5601 \
  -E setup.kibana.username=elastic \
  -E setup.kibana.password='lh7e3n3GJ2TVso3WWlXc0IOSZOJ39HlWwCu4gYK8LwYd3emUZE'




# this is fuckly great 
remember to user docker exec in ansible to provision dashboards





curl -u '{{ ELASTIC_USERNAME_MASKED }}:{{ ELASTIC_PASSWORD_MASKED }}' -X PUT https://{{ SUBDOMAIN_ELASTIC }}.{{ DOMAIN }}:443/_ilm/policy/syslog_policy_ilm -H 'Content-Type: application/json' -d '{
  "policy": {
    "phases": {
      "hot":   { "actions": { "rollover": { "max_size": "10gb", "max_age": "1d" } } },
      "warm":  { "min_age": "3d", "actions": { "forcemerge": { "max_num_segments": 1 }, "shrink": { "number_of_shards": 1 } } },
      "delete":{ "min_age": "14d", "actions": { "delete": {} } }
    }
  }
}'





mc alias set arvan  https://s3.kube0.ir 'ACCESS_KEY' 'SECRET_KEY' --api S3v4 --path "on"





curl -u 'elastic:{{ ELASTIC_PASSWORD_MASKED }}' -X PUT https://{{ SUBDOMAIN_ELASTIC }}.{{ DOMAIN }}:443/_ilm/policy/syslog_policy_ilm -H 'Content-Type: application/json' -d '{
  "policy": {
    "phases": {
      "hot":   { "actions": { "rollover": { "max_size": "10gb", "max_age": "1d" } } },
      "warm":  { "min_age": "3d", "actions": { "forcemerge": { "max_num_segments": 1 }, "shrink": { "number_of_shards": 1 } } },
      "delete":{ "min_age": "14d", "actions": { "delete": {} } }
    }
  }
}'


curl -X PUT http://es.elk.kube0.ir/_index_template/syslog_template -H 'Content-Type: application/json' -d '{
  "index_patterns": ["syslog-*"],
  "template": {
    "settings": {
      "index.lifecycle.name": "syslog_policy_ilm",
      "index.lifecycle.rollover_alias": "syslog-write",
      "number_of_shards": 1, "number_of_replicas": 1
    },
    "mappings": { "properties": { "@timestamp": { "type": "date" } } }
  },
  "priority": 200
}'


curl -X PUT http://<ELASTIC_IP>:9200/syslog-000001 -H 'Content-Type: application/json' -d '{
  "aliases": { "syslog-write": { "is_write_index": true } }
}'

