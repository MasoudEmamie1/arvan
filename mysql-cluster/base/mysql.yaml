apiVersion: v1
kind: Service
metadata:
  name: mysql-master-svc
  namespace: final
spec:
  ports:
  - name: mysql
    port: 3306
  - name: mysql-exporter
    port: 9104    #----->> use this port for mysql-metrics
    targetPort: 9104
  selector:
    app: mysql-master
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-master
  namespace: final
spec:
  selector:
    matchLabels:
      app: mysql-master
  serviceName: mysql-master-svc
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql-master
        component: mysql-exporter
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9104'
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: ROOT_PASSWORD
        - name: APP_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: APP_USER_PASSWORD
        - name: EXPORTER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-exporter-secret
              key: EXPORTER_PASSWORD
        resources:
          requests:
            cpu: "2"
            memory: "4Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: config-volume
          mountPath: /etc/mysql/conf.d
      - name: exporter-bootstrap
        image: mysql:8.0
        command: [ "sh", "-lc" ]
        args:
        - |
          echo "Waiting for MySQL to be ready...";
          sleep 10;
          until mysqladmin -uroot -p"$MYSQL_ROOT_PASSWORD" ping ; do sleep 2; done
          echo "Creating/Granting exporter user...";
          mysql -uroot -p"$MYSQL_ROOT_PASSWORD" << SQL
          DROP USER IF EXISTS 'mysqld_exporter'@'127.0.0.1';
          DROP USER IF EXISTS 'mysqld_exporter'@'::1';
          DROP USER IF EXISTS 'mysqld_exporter'@'localhost';
          CREATE USER IF NOT EXISTS 'mysqld_exporter'@'localhost' IDENTIFIED BY '${EXPORTER_PASSWORD}';
          CREATE USER IF NOT EXISTS 'mysqld_exporter'@'::1' IDENTIFIED BY '${EXPORTER_PASSWORD}';
          CREATE USER IF NOT EXISTS 'mysqld_exporter'@'127.0.0.1' IDENTIFIED BY '${EXPORTER_PASSWORD}';
          GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO 'mysqld_exporter'@'127.0.0.1';
          GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO 'mysqld_exporter'@'::1';
          GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO 'mysqld_exporter'@'localhost';
          # CREATE USER IF NOT EXISTS 'replication'@'%' IDENTIFIED BY '${REPLICATION_PASSWORD}';
          # ALTER USER 'replication'@'%' IDENTIFIED BY '${REPLICATION_PASSWORD}';
          # GRANT REPLICATION SLAVE ON *.* TO 'replication'@'%';
          FLUSH PRIVILEGES;
          SQL
          echo "Done. Exiting bootstrap container."
        env:
        - name: MYSQL_ROOT_PASSWORD  # we can change this varible to MYSQL_PWD to mysqladmin get auto from env
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: ROOT_PASSWORD
        - name: EXPORTER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-exporter-secret
              key: EXPORTER_PASSWORD
        # - name: REPLICATION_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: mysql-secret
        #       key: REPLICATION_PASSWORD
      - name: mysqld-exporter
        image: prom/mysqld-exporter:v0.14.0
        command: [ "/bin/sh", "-c" ]
        args:
        - |
          set -e 
          export DATA_SOURCE_NAME="mysqld_exporter:${EXPORTER_PASSWORD}@tcp(127.0.0.1:3306)/"
          exec /bin/mysqld_exporter \
          --collect.global_status \
          --collect.info_schema.innodb_metrics \
          --collect.auto_increment.columns \
          --collect.info_schema.processlist \
          --collect.binlog_size \
          --collect.info_schema.tablestats \
          --collect.global_variables \
          --collect.info_schema.query_response_time \
          --collect.info_schema.userstats \
          --collect.info_schema.tables \
          --collect.perf_schema.tablelocks \
          --collect.perf_schema.file_events \
          --collect.perf_schema.eventswaits \
          --collect.perf_schema.indexiowaits \
          --collect.perf_schema.tableiowaits \
          --collect.slave_status
        ports:
        - containerPort: 9104
          name: exporter
        env:
        - name: EXPORTER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-exporter-secret
              key: EXPORTER_PASSWORD
        - name: DATA_SOURCE_NAME
          value: "mysqld_exporter:${EXPORTER_PASSWORD}@tcp(127.0.0.1:3306)/"
      volumes:
      - name: config-volume
        configMap:
          name: mysql-config
          items:
          - key: master.cnf
            path: master.cnf
  volumeClaimTemplates:
  - metadata:
      name: mysql-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-slave-svc
  namespace: final
spec:
  ports:
  - name: mysql
    port: 3306
  - name: mysql-exporter
    port: 9104    #------>> use this port for mysql-metrics
    targetPort: 9104
  selector:
    app: mysql-slave
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-slave
  namespace: final
spec:
  selector:
    matchLabels:
      app: mysql-slave
  serviceName: mysql-slave-svc
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql-slave
        component: mysql-exporter
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9104'
    spec:
      initContainers:
      - name: wait-for-master
        image: busybox:1.28
        command: [ 'sh', '-c', 'until nslookup mysql-master-svc; do echo waiting for master; sleep 2; done;' ]
      containers:
      - name: mysql
        image: mysql:8.0
        ports:
        - containerPort: 3306
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: ROOT_PASSWORD
        resources:
          requests:
            cpu: "2"
            memory: "4Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: config-volume
          mountPath: /etc/mysql/conf.d
      - name: mysqld-exporter
        image: prom/mysqld-exporter:v0.14.0
        command: [ "/bin/sh", "-c" ]
        args:
        - |
          set -e 
          export DATA_SOURCE_NAME="mysqld_exporter:${EXPORTER_PASSWORD}@tcp(127.0.0.1:3306)/"
          exec /bin/mysqld_exporter \
          --collect.global_status \
          --collect.info_schema.innodb_metrics \
          --collect.auto_increment.columns \
          --collect.info_schema.processlist \
          --collect.binlog_size \
          --collect.info_schema.tablestats \
          --collect.global_variables \
          --collect.info_schema.query_response_time \
          --collect.info_schema.userstats \
          --collect.info_schema.tables \
          --collect.perf_schema.tablelocks \
          --collect.perf_schema.file_events \
          --collect.perf_schema.eventswaits \
          --collect.perf_schema.indexiowaits \
          --collect.perf_schema.tableiowaits \
          --collect.slave_status
        ports:
        - containerPort: 9104
          name: exporter
        env:
        - name: EXPORTER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-exporter-secret
              key: EXPORTER_PASSWORD
        - name: DATA_SOURCE_NAME
          value: "mysqld_exporter:${EXPORTER_PASSWORD}@tcp(127.0.0.1:3306)/"
      # - name: mysqld-exporter
      #   image: prom/mysqld-exporter:v0.14.0
      #   args:
      #   - "--collect.global_status"
      #   - "--collect.info_schema.innodb_metrics"
      #   - "--collect.auto_increment.columns"
      #   - "--collect.info_schema.processlist"
      #   - "--collect.binlog_size"
      #   - "--collect.info_schema.tablestats"
      #   - "--collect.global_variables"
      #   - "--collect.info_schema.query_response_time"
      #   - "--collect.info_schema.userstats"
      #   - "--collect.info_schema.tables"
      #   - "--collect.perf_schema.tablelocks"
      #   - "--collect.perf_schema.file_events"
      #   - "--collect.perf_schema.eventswaits"
      #   - "--collect.perf_schema.indexiowaits"
      #   - "--collect.perf_schema.tableiowaits"
      #   - "--collect.slave_status"
      #   ports:
      #   - containerPort: 9104
      #     name: exporter
      #   env:
      #   - name: EXPORTER_PASSWORD
      #     valueFrom:
      #       secretKeyRef:
      #         name: mysql-exporter-secret
      #         key: EXPORTER_PASSWORD
      #   - name: DATA_SOURCE_NAME
      #     value: "mysqld_exporter:${EXPORTER_PASSWORD}@tcp(127.0.0.1:3306)/" # here we can change user root to mysql_exporter
      volumes:
      - name: config-volume
        configMap:
          name: mysql-config
          items:
          - key: slave.cnf
            path: slave.cnf
  volumeClaimTemplates:
  - metadata:
      name: mysql-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 20Gi
